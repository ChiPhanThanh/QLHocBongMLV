<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPPz8xbu7u6p7u7u9u7u7v/u7u7/7u7u/+7u
        7v/u7u7/7u7u/+7u7vXu7u6o8/PzFQAAAAAAAAAAAAAAAAAAAADv7++s7u7u/+7u7v/u7u7/7u7u/+7u
        7v/u7u7/7u7u/+/n6v/x2eL/7uvs/+/v76oAAAAAAAAAAAAAAAAAAAAA7u7u8+np7v+4uOr/qanp/7S0
        6v/AwMD/ODg4/3t7e//5rMj//4iz//PN2//u7u7yAAAAAAAAAAAAAAAAAAAAAO7u7v/Gxuv/c3Pl/3Nz
        5f9zc+X/0NDQ/2hoaP+np6f/8tPe//bA1P/v5ej/7u7u/wAAAAAAAAAAAAAAAAAAAADu7u7/xcXr/3Nz
        5f9zc+X/c3Pl/8vp8v9m2f3/nOH3//fWjf/+x03/8uTE/+7u7v8AAAAAAAAAAAAAAAAAAAAA7u7u/9/f
        7f+YmOj/k5Pn/6io6f/W6/H/fNz6/7Hl9f/13qz/+tBz//Ho1f/u7u7/AAAAAAAAAAAAAAAAAAAAAO7u
        7v/r7uL/zOtw/8jqYv/I6mL/yOpi/8jqYv/I6mL/yOpi/8/rff/s7ub/7u7u/wAAAAAAAAAAAAAAAAAA
        AADu7u7/3Oyq/7bpHf+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/3Oyr/+7u7v8AAAAAAAAAAAAA
        AAAAAAAA7u7u/9/ttf+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/tukd/9ztqf/u7u7/AAAAAAAA
        AAAAAAAAAAAAAO7u7vPt7uv/2eyh/8/rfP/J62T/w+pM/7vpMv+36R//tukd/7bpHv/i7cD/7u7u8gAA
        AAAAAAAAAAAAAAAAAADv7++s7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7e7q/+ft1P/n7dP/7u7u/+/v
        76oAAAAAAAAAAAAAAAAAAAAA8/PzFu7u7qju7u7u7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u7u7u
        7qbz8/MVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA4AcAAMADAADAAwAAwAMAAMADAADAAwAAwAMAAMAD
        AADAAwAAwAMAAMADAADgBwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADu7u4u7u7upO7u7uzu7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u
        7v/u7u7/7u7u/+7u7uzu7u6j7u7uLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA7u7uWe7u7vnu7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u
        7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u757e3tVwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAO7u7i7u7u747u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u
        7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u747e3tKwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA7u7uqO7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u
        7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/y1uD/9cTW//a/0//w4Ob/7u7u/+7u7v/u7u6mAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADu7u7q7u7u/+7u7v/u7u7/7u7u/+7u7v/r6+7/3d3t/9XV
        7P/q6u7/7u7u/8DAwP9aWlr/Q0ND/0FBQf/S0tL/8tXg//+Is///iLP//4iz//msyP/u7u7/7u7u/+7u
        7ucAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7u7v7u7u7/7u7u/9TU7P+MjOb/e3vm/3Nz
        5f9zc+X/c3Pl/4yM5//u7u7/aGho/yEhIf8hISH/ISEh/6urq//0zNv//4iz//+Is///iLP/+arG/+7u
        7v/u7u7/7u7u/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7u7u/+7u7v/u7u7/np7o/3Nz
        5f9zc+X/c3Pl/3Nz5f9zc+X/c3Pl/+7u7v9zc3P/ISEh/yEhIf8iIiL/xMTE//Hc5P/+jLX//4u1//2V
        u//0y9r/7u7u/+7u7v/u7u7/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADu7u7/7u7u/+7u
        7v+cnOj/c3Pl/3Nz5f9zc+X/c3Pl/3Nz5f9zc+X/7u7u/+Tk5P+4uLj/uLi4/8vLy//u7u7/7u7u/+7u
        7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7u
        7v/u7u7/7u7u/5yc6P9zc+X/c3Pl/3Nz5f9zc+X/c3Pl/3Nz5f/u7u7/zeny/37c+v952/r/gd36/+Dr
        7//w6t3//Mxf//7HTP/9yFL/9N6r/+7u7v/u7u7/7u7u/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA7u7u/+7u7v/u7u7/nJzo/3Nz5f9zc+X/c3Pl/3Nz5f9zc+X/c3Pl/+7u7v+G3vn/T9X//0/V
        //9P1f//u+b0//Thtf//xED//8RA///EQP/50nr/7u7u/+7u7v/u7u7/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADu7u7/7u7u/+7u7v+vr+r/c3Pl/3Nz5f9zc+X/c3Pl/3Nz5f+Hh+b/7u7u/47f
        +P9P1f//T9X//0/V///E5/L/8+O+///EQP//xED//8RA//jVhf/u7u7/7u7u/+7u7v8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7u7v/u7u7/7u7u/+zs7v/MzOz/xcXr/8XF6//Fxev/yMjr/+Pj
        7v/u7u7/5e3v/7zm8/+55vT/xefy/+3u7v/u7u3/8uPB//TgtP/z47//7+3o/+7u7v/u7u7/7u7u/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7u7u/+7u7v/u7u7/7u7u/+jt1v/g7bf/4O23/+Dt
        t//g7bf/4O23/+Dtt//g7bf/4O23/+Dtt//g7bf/4O23/+Dtt//g7bf/3+y4/+zu5f/u7u7/7u7u/+7u
        7v/u7u7/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADu7u7/7u7u/+7u7v/f7Lj/uOoj/7bp
        Hf+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/uuos/+Tt
        x//u7u7/7u7u/+7u7v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7u7v/u7u7/7u7u/8vr
        bP+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/tukd/7bp
        Hf+26R3/zOtw/+7u7v/u7u7/7u7u/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7u7u/+7u
        7v/u7u7/yOpi/7bpHf+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/tukd/7bp
        Hf+26R3/tukd/7bpHf/I6mL/7u7u/+7u7v/u7u7/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADu7u7/7u7u/+7u7v/I6mL/tukd/7bpHf+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/tukd/7bp
        Hf+26R3/tukd/7bpHf+26R3/tukd/8jqYv/u7u7/7u7u/+7u7v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAO7u7v/u7u7/7u7u/9Drfv+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/tukd/7bp
        Hf+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/yOpi/+7u7v/u7u7/7u7u/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA7u7u/u7u7v/u7u7/6u7g/8rrZ/+56Sj/tukd/7bpHf+26R3/tukd/7bp
        Hf+26R3/tukd/7bpHf+26R3/tukd/7bpHf+26R3/tukd/7bpHf/M623/7u7u/+7u7v/u7u7+AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADu7u7q7u7u/+7u7v/u7u7/7u7u/+7u7v/r7uP/5e3L/9/t
        tP/Z7J3/0uyG/8vrbv/F6lf/v+o//7npKP+26R3/tukd/7bpHf+26R3/t+kj/+Dsuf/u7u7/7u7u/+7u
        7ucAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7u7qju7u7/7u7u/+7u7v/u7u7/7u7u/+7u
        7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+vu4//l7cv/3u2z/9zsqv/p7d3/7u7u/+7u
        7v/u7u7/7u7upgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7u7uLu7u7vju7u7/7u7u/+7u
        7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u
        7v/u7u7/7u7u/+7u7vjt7e0rAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7u7uWe7u
        7vnu7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u
        7v/u7u7/7u7u/+7u7v/u7u757e3tVwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA7u7uLu7u7qTt7e3p7u7u+e7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u
        7v/u7u7/7u7u/+7u7vnv7+/o7u7uo+7u7i0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////////+AAB//AAAP/gAAB/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/4AAAf/AAAP/4AAH//////////////////////
</value>
  </data>
</root>